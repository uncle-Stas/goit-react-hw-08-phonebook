{"version":3,"file":"static/js/849.4af0fc1b.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-03-phonebook/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://goit-react-hw-03-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-03-phonebook/./src/components/ContactsList/ContactsList.module.css?d8e9","components/Notification/Notification.jsx","webpack://goit-react-hw-03-phonebook/./src/components/ContactsList/ContactItem.module.css?fab7","components/ContactsList/ContactItem.jsx","Redux/phonebook/selectors.js","components/ContactsList/ContactsList.jsx","webpack://goit-react-hw-03-phonebook/./src/components/ContactsFilter/ContactsFilter.module.css?d01d","components/ContactsFilter/ContactsFilter.jsx","pages/PhonebookPage/PhonebookPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__2eHmY\",\"container\":\"Section_container__L4+gU\"};","import css from './Section.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ children }) => {\r\n  return (\r\n    <section className={css.section}>\r\n      <div className={css.container}>{children}</div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\n// --------------------------- PropTypes ----------------------\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__tEuIk\",\"inputLabel\":\"ContactForm_inputLabel__58joB\"};","import css from './ContactForm.module.css';\r\n\r\nimport { Notify } from 'notiflix';\r\nimport { useState } from 'react';\r\nimport {\r\n  useAddContactMutation,\r\n  useGetContactsQuery,\r\n} from 'services/ApiContactsSlice';\r\nimport { useEffect } from 'react';\r\nimport Button from 'components/Button/Button';\r\n\r\nNotify.init({\r\n  position: 'center-top',\r\n});\r\n\r\nconst initialLocalState = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nconst ContactForm = () => {\r\n  const [localState, setLocalState] = useState(initialLocalState);\r\n  const { data: contacts } = useGetContactsQuery();\r\n  const [addContact, { isLoading, isSuccess, isError }] =\r\n    useAddContactMutation();\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    setLocalState(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const repeatName = nameQ => {\r\n    let nameRepeat = 0;\r\n\r\n    for (const contact of contacts) {\r\n      if (contact.name.toLowerCase() === nameQ.toLowerCase()) {\r\n        nameRepeat = 1;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return nameRepeat;\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const { name, number } = localState;\r\n\r\n    if (repeatName(name)) {\r\n      return Notify.failure(`${name}, is alredy in contacts`);\r\n    }\r\n\r\n    addContact({ name, number });\r\n    event.target.reset();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      Notify.success(`${localState.name}, added to phonebook`);\r\n      setLocalState(initialLocalState);\r\n    }\r\n  }, [isSuccess]);\r\n\r\n  useEffect(() => {\r\n    if (isError) {\r\n      Notify.failure('Oops, something went wrong...');\r\n    }\r\n  }, [isError]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={css.form}>\r\n      <label className={css.inputLabel}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          onChange={handleChange}\r\n          placeholder=\"Enter name\"\r\n          autoComplete=\"off\"\r\n          minLength={3}\r\n          value={localState.name}\r\n        />\r\n      </label>\r\n      <label className={css.inputLabel}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          onChange={handleChange}\r\n          placeholder=\"Enter phone number\"\r\n          autoComplete=\"off\"\r\n          value={localState.phone}\r\n        />\r\n      </label>\r\n      <Button type=\"submit\" text=\"add contact\" isLoading={isLoading} />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"ContactsList_contactsList__P1+X3\"};","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ text }) => {\r\n  return (\r\n    <p>\r\n      <b>{text}</b>\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n\r\n// --------------------------- PropTypes ----------------------\r\n\r\nNotification.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"ContactItem_contactItem__wfw6G\",\"itemText\":\"ContactItem_itemText__Qy-jl\"};","import css from './ContactItem.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Notify } from 'notiflix';\r\nimport { useDeleteContactMutation } from 'services/ApiContactsSlice';\r\nimport { useEffect } from 'react';\r\nimport Button from 'components/Button/Button';\r\n\r\nconst ContactItem = ({ id, name, number }) => {\r\n  const [deleteContact, { isLoading, isSuccess, isError }] =\r\n    useDeleteContactMutation();\r\n\r\n  const handleClick = () => {\r\n    deleteContact(id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      Notify.info(`${name} - was removed`);\r\n    }\r\n  }, [name, isSuccess]);\r\n\r\n  useEffect(() => {\r\n    if (isError) {\r\n      Notify.failure('Oops, something went wrong...');\r\n    }\r\n  }, [isError]);\r\n\r\n  return (\r\n    <li className={css.contactItem}>\r\n      <span className={css.itemText}>\r\n        {name}: {number}\r\n      </span>\r\n      <Button\r\n        type=\"button\"\r\n        text=\"delete\"\r\n        onClick={handleClick}\r\n        isLoading={isLoading}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactItem;\r\n\r\n// --------------------------- PropTypes ----------------------\r\n\r\nContactItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n","export const selectFilter = state => state.filter;\r\n","import css from './ContactsList.module.css';\r\n\r\nimport Notification from 'components/Notification/Notification';\r\nimport ContactItem from './ContactItem';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { selectFilter } from 'Redux/phonebook/selectors';\r\nimport { contactsApi, useGetContactsQuery } from 'services/ApiContactsSlice';\r\nimport { useEffect } from 'react';\r\nimport { store } from 'Redux/store';\r\n\r\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\nimport 'react-loading-skeleton/dist/skeleton.css';\r\n\r\nconst ContactsList = () => {\r\n  const { data: contacts, error, isLoading, isSuccess } = useGetContactsQuery();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      store.dispatch(contactsApi.util.resetApiState());\r\n    };\r\n  }, []);\r\n\r\n  const filter = useSelector(selectFilter);\r\n\r\n  const filterContacts = array => {\r\n    if (!filter) {\r\n      return array;\r\n    }\r\n\r\n    return array.filter(arrayitem =>\r\n      arrayitem.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  const filteredContacts = filterContacts(contacts);\r\n\r\n  if (!contacts?.length) {\r\n    return (\r\n      <>\r\n        {isLoading && (\r\n          <SkeletonTheme highlightColor=\"#000000\">\r\n            <Skeleton />\r\n          </SkeletonTheme>\r\n        )}\r\n        <Notification text=\"You don't have contacts in the phone book. Please add new contacts.\" />\r\n      </>\r\n    );\r\n  }\r\n\r\n  if (!filteredContacts.length) {\r\n    return (\r\n      <Notification\r\n        text={`${filter} - is not in your phone book. Please add new contact.`}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {error && <Notification text={error.data} />}\r\n      {isSuccess && (\r\n        <ul className={css.contactsList}>\r\n          {filteredContacts.map(contact => (\r\n            <ContactItem key={contact.id} {...contact} />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ContactsFilter_title__8q3q3\",\"filterLabel\":\"ContactsFilter_filterLabel__r2j+Y\"};","import css from './ContactsFilter.module.css';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setFilter } from 'Redux/phonebook/filterSlice';\r\nimport { selectFilter } from 'Redux/phonebook/selectors';\r\n\r\nconst ContactsFilter = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeFilter = event => {\r\n    const { value } = event.target;\r\n\r\n    dispatch(setFilter(value));\r\n  };\r\n\r\n  const filter = useSelector(selectFilter);\r\n\r\n  return (\r\n    <>\r\n      <h2 className={css.title}>Contacts</h2>\r\n      <label className={css.filterLabel}>\r\n        Search contacts by name:\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter name\"\r\n          onChange={onChangeFilter}\r\n          value={filter}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactsFilter;\r\n","import ContactForm from 'components/ContactForm/ContactForm';\r\nimport ContactsList from 'components/ContactsList/ContactsList';\r\nimport ContactsFilter from 'components/ContactsFilter/ContactsFilter';\r\nimport Section from 'components/Section/Section';\r\n\r\nconst PhonebookPage = () => {\r\n  return (\r\n    <>\r\n      <Section>\r\n        <ContactForm />\r\n      </Section>\r\n      <Section>\r\n        <>\r\n          <ContactsFilter />\r\n          <ContactsList />\r\n        </>\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PhonebookPage;\r\n"],"names":["children","className","css","Notify","position","initialLocalState","name","number","useState","localState","setLocalState","contacts","useGetContactsQuery","data","useAddContactMutation","addContact","isLoading","isSuccess","isError","handleChange","event","target","value","prev","useEffect","onSubmit","preventDefault","nameQ","nameRepeat","toLowerCase","repeatName","reset","type","pattern","title","required","onChange","placeholder","autoComplete","minLength","phone","Button","text","id","useDeleteContactMutation","deleteContact","onClick","selectFilter","state","filter","error","store","contactsApi","array","useSelector","filteredContacts","arrayitem","includes","length","map","contact","highlightColor","dispatch","useDispatch","setFilter","Section"],"sourceRoot":""}